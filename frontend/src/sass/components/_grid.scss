// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.
@if $enable-grid-classes {
    .container {
        @include make-container();
        @include make-container-max-widths();
    }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.
@if $enable-grid-classes {
    .container-fluid {
        @include make-container();
    }
}

// Row
//
// Rows contain and clear the floats of your columns.
@if $enable-grid-classes {
    .row {
        @include make-row();
    }

    // Remove the negative margin from default .row, then the horizontal padding
    // from all immediate children columns (to prevent runaway style inheritance).
    .no-gutters {
        margin-right: 0;
        margin-left: 0;
        > .col,
        > [class*='col-'] {
            padding-right: 0;
            padding-left: 0;
        }
    }
}

// Columns
//
// Common styles for small and large grid columns
@if $enable-grid-classes {
    @include make-grid-columns();
}

.sgrid {
    display: flex;
    flex-wrap: wrap;
    position: relative;
    &__left,
    &__right {
        position: relative;
        min-height: 1px;
        width: 100%;
        @include media-breakpoint-up(lg) {
            flex: 0 0 50%;
            max-width: 50%;
        }
    }
}
.sgridContent {
    display: flex;
    flex-wrap: wrap;
    margin-right: -10px;
    margin-left: -10px;
    &.reverse-column {
        @include media-breakpoint-down(lg) {
            flex-direction: column-reverse;
        }
    }
    &__left,
    &__right {
        position: relative;
        width: 100%;
        min-height: 1px;
        padding-left: 10px;
        padding-right: 10px;
        margin-bottom: 15px;
        @include media-breakpoint-up(lg) {
            flex: 0 0 50%;
            max-width: 50%;
            margin-bottom: 0;
        }
    }
}
